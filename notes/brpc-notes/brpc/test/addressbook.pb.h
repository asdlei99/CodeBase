// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook.proto

#ifndef PROTOBUF_addressbook_2eproto__INCLUDED
#define PROTOBUF_addressbook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace addressbook {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_addressbook_2eproto();
void protobuf_AssignDesc_addressbook_2eproto();
void protobuf_ShutdownFile_addressbook_2eproto();

class Person;
class Person_PhoneNumber;
class AddressBook;

enum Person_PhoneType {
  Person_PhoneType_MOBILE = 0,
  Person_PhoneType_HOME = 1,
  Person_PhoneType_WORK = 2
};
bool Person_PhoneType_IsValid(int value);
const Person_PhoneType Person_PhoneType_PhoneType_MIN = Person_PhoneType_MOBILE;
const Person_PhoneType Person_PhoneType_PhoneType_MAX = Person_PhoneType_WORK;
const int Person_PhoneType_PhoneType_ARRAYSIZE = Person_PhoneType_PhoneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Person_PhoneType_descriptor();
inline const ::std::string& Person_PhoneType_Name(Person_PhoneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Person_PhoneType_descriptor(), value);
}
inline bool Person_PhoneType_Parse(
    const ::std::string& name, Person_PhoneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Person_PhoneType>(
    Person_PhoneType_descriptor(), name, value);
}
// ===================================================================

class Person_PhoneNumber : public ::google::protobuf::Message {
 public:
  Person_PhoneNumber();
  virtual ~Person_PhoneNumber();

  Person_PhoneNumber(const Person_PhoneNumber& from);

  inline Person_PhoneNumber& operator=(const Person_PhoneNumber& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person_PhoneNumber& default_instance();

  void Swap(Person_PhoneNumber* other);

  // implements Message ----------------------------------------------

  Person_PhoneNumber* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person_PhoneNumber& from);
  void MergeFrom(const Person_PhoneNumber& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline const ::std::string& number() const;
  inline void set_number(const ::std::string& value);
  inline void set_number(const char* value);
  inline void set_number(const char* value, size_t size);
  inline ::std::string* mutable_number();
  inline ::std::string* release_number();
  inline void set_allocated_number(::std::string* number);

  // optional .addressbook.Person.PhoneType type = 2 [default = HOME];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::addressbook::Person_PhoneType type() const;
  inline void set_type(::addressbook::Person_PhoneType value);

  // @@protoc_insertion_point(class_scope:addressbook.Person.PhoneNumber)
 private:
  inline void set_has_number();
  inline void clear_has_number();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* number_;
  int type_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static Person_PhoneNumber* default_instance_;
};
// -------------------------------------------------------------------

class Person : public ::google::protobuf::Message {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  Person* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Person_PhoneNumber PhoneNumber;

  typedef Person_PhoneType PhoneType;
  static const PhoneType MOBILE = Person_PhoneType_MOBILE;
  static const PhoneType HOME = Person_PhoneType_HOME;
  static const PhoneType WORK = Person_PhoneType_WORK;
  static inline bool PhoneType_IsValid(int value) {
    return Person_PhoneType_IsValid(value);
  }
  static const PhoneType PhoneType_MIN =
    Person_PhoneType_PhoneType_MIN;
  static const PhoneType PhoneType_MAX =
    Person_PhoneType_PhoneType_MAX;
  static const int PhoneType_ARRAYSIZE =
    Person_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhoneType_descriptor() {
    return Person_PhoneType_descriptor();
  }
  static inline const ::std::string& PhoneType_Name(PhoneType value) {
    return Person_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(const ::std::string& name,
      PhoneType* value) {
    return Person_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string email = 3;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 3;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // repeated .addressbook.Person.PhoneNumber phone = 4;
  inline int phone_size() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 4;
  inline const ::addressbook::Person_PhoneNumber& phone(int index) const;
  inline ::addressbook::Person_PhoneNumber* mutable_phone(int index);
  inline ::addressbook::Person_PhoneNumber* add_phone();
  inline const ::google::protobuf::RepeatedPtrField< ::addressbook::Person_PhoneNumber >&
      phone() const;
  inline ::google::protobuf::RepeatedPtrField< ::addressbook::Person_PhoneNumber >*
      mutable_phone();

  // optional int64 data = 5;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline ::google::protobuf::int64 data() const;
  inline void set_data(::google::protobuf::int64 value);

  // optional sint32 data32 = 6;
  inline bool has_data32() const;
  inline void clear_data32();
  static const int kData32FieldNumber = 6;
  inline ::google::protobuf::int32 data32() const;
  inline void set_data32(::google::protobuf::int32 value);

  // optional sint64 data64 = 7;
  inline bool has_data64() const;
  inline void clear_data64();
  static const int kData64FieldNumber = 7;
  inline ::google::protobuf::int64 data64() const;
  inline void set_data64(::google::protobuf::int64 value);

  // required double datadouble = 8;
  inline bool has_datadouble() const;
  inline void clear_datadouble();
  static const int kDatadoubleFieldNumber = 8;
  inline double datadouble() const;
  inline void set_datadouble(double value);

  // required float datafloat = 9;
  inline bool has_datafloat() const;
  inline void clear_datafloat();
  static const int kDatafloatFieldNumber = 9;
  inline float datafloat() const;
  inline void set_datafloat(float value);

  // optional uint32 datau32 = 10;
  inline bool has_datau32() const;
  inline void clear_datau32();
  static const int kDatau32FieldNumber = 10;
  inline ::google::protobuf::uint32 datau32() const;
  inline void set_datau32(::google::protobuf::uint32 value);

  // optional uint64 datau64 = 11;
  inline bool has_datau64() const;
  inline void clear_datau64();
  static const int kDatau64FieldNumber = 11;
  inline ::google::protobuf::uint64 datau64() const;
  inline void set_datau64(::google::protobuf::uint64 value);

  // optional bool databool = 12;
  inline bool has_databool() const;
  inline void clear_databool();
  static const int kDataboolFieldNumber = 12;
  inline bool databool() const;
  inline void set_databool(bool value);

  // optional bytes databyte = 13;
  inline bool has_databyte() const;
  inline void clear_databyte();
  static const int kDatabyteFieldNumber = 13;
  inline const ::std::string& databyte() const;
  inline void set_databyte(const ::std::string& value);
  inline void set_databyte(const char* value);
  inline void set_databyte(const void* value, size_t size);
  inline ::std::string* mutable_databyte();
  inline ::std::string* release_databyte();
  inline void set_allocated_databyte(::std::string* databyte);

  // optional fixed32 datafix32 = 14;
  inline bool has_datafix32() const;
  inline void clear_datafix32();
  static const int kDatafix32FieldNumber = 14;
  inline ::google::protobuf::uint32 datafix32() const;
  inline void set_datafix32(::google::protobuf::uint32 value);

  // optional fixed64 datafix64 = 15;
  inline bool has_datafix64() const;
  inline void clear_datafix64();
  static const int kDatafix64FieldNumber = 15;
  inline ::google::protobuf::uint64 datafix64() const;
  inline void set_datafix64(::google::protobuf::uint64 value);

  // optional sfixed32 datasfix32 = 16;
  inline bool has_datasfix32() const;
  inline void clear_datasfix32();
  static const int kDatasfix32FieldNumber = 16;
  inline ::google::protobuf::int32 datasfix32() const;
  inline void set_datasfix32(::google::protobuf::int32 value);

  // optional sfixed64 datasfix64 = 17;
  inline bool has_datasfix64() const;
  inline void clear_datasfix64();
  static const int kDatasfix64FieldNumber = 17;
  inline ::google::protobuf::int64 datasfix64() const;
  inline void set_datasfix64(::google::protobuf::int64 value);

  // optional float datafloat_scientific = 18;
  inline bool has_datafloat_scientific() const;
  inline void clear_datafloat_scientific();
  static const int kDatafloatScientificFieldNumber = 18;
  inline float datafloat_scientific() const;
  inline void set_datafloat_scientific(float value);

  // optional double datadouble_scientific = 19;
  inline bool has_datadouble_scientific() const;
  inline void clear_datadouble_scientific();
  static const int kDatadoubleScientificFieldNumber = 19;
  inline double datadouble_scientific() const;
  inline void set_datadouble_scientific(double value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Person)
  // @@protoc_insertion_point(class_scope:addressbook.Person)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_data32();
  inline void clear_has_data32();
  inline void set_has_data64();
  inline void clear_has_data64();
  inline void set_has_datadouble();
  inline void clear_has_datadouble();
  inline void set_has_datafloat();
  inline void clear_has_datafloat();
  inline void set_has_datau32();
  inline void clear_has_datau32();
  inline void set_has_datau64();
  inline void clear_has_datau64();
  inline void set_has_databool();
  inline void clear_has_databool();
  inline void set_has_databyte();
  inline void clear_has_databyte();
  inline void set_has_datafix32();
  inline void clear_has_datafix32();
  inline void set_has_datafix64();
  inline void clear_has_datafix64();
  inline void set_has_datasfix32();
  inline void clear_has_datasfix32();
  inline void set_has_datasfix64();
  inline void clear_has_datasfix64();
  inline void set_has_datafloat_scientific();
  inline void clear_has_datafloat_scientific();
  inline void set_has_datadouble_scientific();
  inline void clear_has_datadouble_scientific();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* email_;
  ::google::protobuf::RepeatedPtrField< ::addressbook::Person_PhoneNumber > phone_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 data32_;
  ::google::protobuf::int64 data_;
  ::google::protobuf::int64 data64_;
  double datadouble_;
  float datafloat_;
  ::google::protobuf::uint32 datau32_;
  ::google::protobuf::uint64 datau64_;
  ::std::string* databyte_;
  bool databool_;
  ::google::protobuf::uint32 datafix32_;
  ::google::protobuf::uint64 datafix64_;
  ::google::protobuf::int64 datasfix64_;
  ::google::protobuf::int32 datasfix32_;
  float datafloat_scientific_;
  double datadouble_scientific_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// -------------------------------------------------------------------

class AddressBook : public ::google::protobuf::Message {
 public:
  AddressBook();
  virtual ~AddressBook();

  AddressBook(const AddressBook& from);

  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBook& default_instance();

  void Swap(AddressBook* other);

  // implements Message ----------------------------------------------

  AddressBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddressBook& from);
  void MergeFrom(const AddressBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .addressbook.Person person = 1;
  inline int person_size() const;
  inline void clear_person();
  static const int kPersonFieldNumber = 1;
  inline const ::addressbook::Person& person(int index) const;
  inline ::addressbook::Person* mutable_person(int index);
  inline ::addressbook::Person* add_person();
  inline const ::google::protobuf::RepeatedPtrField< ::addressbook::Person >&
      person() const;
  inline ::google::protobuf::RepeatedPtrField< ::addressbook::Person >*
      mutable_person();

  // @@protoc_insertion_point(class_scope:addressbook.AddressBook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::addressbook::Person > person_;
  friend void  protobuf_AddDesc_addressbook_2eproto();
  friend void protobuf_AssignDesc_addressbook_2eproto();
  friend void protobuf_ShutdownFile_addressbook_2eproto();

  void InitAsDefaultInstance();
  static AddressBook* default_instance_;
};
// ===================================================================

static const int kHobbyFieldNumber = 100;
extern ::google::protobuf::internal::ExtensionIdentifier< ::addressbook::Person,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  hobby;

// ===================================================================

// Person_PhoneNumber

// required string number = 1;
inline bool Person_PhoneNumber::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person_PhoneNumber::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person_PhoneNumber::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person_PhoneNumber::clear_number() {
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_->clear();
  }
  clear_has_number();
}
inline const ::std::string& Person_PhoneNumber::number() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.PhoneNumber.number)
  return *number_;
}
inline void Person_PhoneNumber::set_number(const ::std::string& value) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(value);
  // @@protoc_insertion_point(field_set:addressbook.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(value);
  // @@protoc_insertion_point(field_set_char:addressbook.Person.PhoneNumber.number)
}
inline void Person_PhoneNumber::set_number(const char* value, size_t size) {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  number_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:addressbook.Person.PhoneNumber.number)
}
inline ::std::string* Person_PhoneNumber::mutable_number() {
  set_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    number_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:addressbook.Person.PhoneNumber.number)
  return number_;
}
inline ::std::string* Person_PhoneNumber::release_number() {
  clear_has_number();
  if (number_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = number_;
    number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person_PhoneNumber::set_allocated_number(::std::string* number) {
  if (number_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete number_;
  }
  if (number) {
    set_has_number();
    number_ = number;
  } else {
    clear_has_number();
    number_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:addressbook.Person.PhoneNumber.number)
}

// optional .addressbook.Person.PhoneType type = 2 [default = HOME];
inline bool Person_PhoneNumber::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person_PhoneNumber::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person_PhoneNumber::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person_PhoneNumber::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::addressbook::Person_PhoneType Person_PhoneNumber::type() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.PhoneNumber.type)
  return static_cast< ::addressbook::Person_PhoneType >(type_);
}
inline void Person_PhoneNumber::set_type(::addressbook::Person_PhoneType value) {
  assert(::addressbook::Person_PhoneType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.PhoneNumber.type)
}

// -------------------------------------------------------------------

// Person

// required string name = 1;
inline bool Person::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Person::name() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.name)
  return *name_;
}
inline void Person::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:addressbook.Person.name)
}
inline void Person::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:addressbook.Person.name)
}
inline void Person::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:addressbook.Person.name)
}
inline ::std::string* Person::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:addressbook.Person.name)
  return name_;
}
inline ::std::string* Person::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:addressbook.Person.name)
}

// required int32 id = 2;
inline bool Person::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Person::id() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.id)
  return id_;
}
inline void Person::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.id)
}

// optional string email = 3;
inline bool Person::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Person::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Person::clear_email() {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& Person::email() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.email)
  return *email_;
}
inline void Person::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set:addressbook.Person.email)
}
inline void Person::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(value);
  // @@protoc_insertion_point(field_set_char:addressbook.Person.email)
}
inline void Person::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:addressbook.Person.email)
}
inline ::std::string* Person::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    email_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:addressbook.Person.email)
  return email_;
}
inline ::std::string* Person::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:addressbook.Person.email)
}

// repeated .addressbook.Person.PhoneNumber phone = 4;
inline int Person::phone_size() const {
  return phone_.size();
}
inline void Person::clear_phone() {
  phone_.Clear();
}
inline const ::addressbook::Person_PhoneNumber& Person::phone(int index) const {
  // @@protoc_insertion_point(field_get:addressbook.Person.phone)
  return phone_.Get(index);
}
inline ::addressbook::Person_PhoneNumber* Person::mutable_phone(int index) {
  // @@protoc_insertion_point(field_mutable:addressbook.Person.phone)
  return phone_.Mutable(index);
}
inline ::addressbook::Person_PhoneNumber* Person::add_phone() {
  // @@protoc_insertion_point(field_add:addressbook.Person.phone)
  return phone_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::addressbook::Person_PhoneNumber >&
Person::phone() const {
  // @@protoc_insertion_point(field_list:addressbook.Person.phone)
  return phone_;
}
inline ::google::protobuf::RepeatedPtrField< ::addressbook::Person_PhoneNumber >*
Person::mutable_phone() {
  // @@protoc_insertion_point(field_mutable_list:addressbook.Person.phone)
  return &phone_;
}

// optional int64 data = 5;
inline bool Person::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Person::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Person::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Person::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
inline ::google::protobuf::int64 Person::data() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.data)
  return data_;
}
inline void Person::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.data)
}

// optional sint32 data32 = 6;
inline bool Person::has_data32() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Person::set_has_data32() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Person::clear_has_data32() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Person::clear_data32() {
  data32_ = 0;
  clear_has_data32();
}
inline ::google::protobuf::int32 Person::data32() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.data32)
  return data32_;
}
inline void Person::set_data32(::google::protobuf::int32 value) {
  set_has_data32();
  data32_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.data32)
}

// optional sint64 data64 = 7;
inline bool Person::has_data64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Person::set_has_data64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Person::clear_has_data64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Person::clear_data64() {
  data64_ = GOOGLE_LONGLONG(0);
  clear_has_data64();
}
inline ::google::protobuf::int64 Person::data64() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.data64)
  return data64_;
}
inline void Person::set_data64(::google::protobuf::int64 value) {
  set_has_data64();
  data64_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.data64)
}

// required double datadouble = 8;
inline bool Person::has_datadouble() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Person::set_has_datadouble() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Person::clear_has_datadouble() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Person::clear_datadouble() {
  datadouble_ = 0;
  clear_has_datadouble();
}
inline double Person::datadouble() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datadouble)
  return datadouble_;
}
inline void Person::set_datadouble(double value) {
  set_has_datadouble();
  datadouble_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datadouble)
}

// required float datafloat = 9;
inline bool Person::has_datafloat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Person::set_has_datafloat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Person::clear_has_datafloat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Person::clear_datafloat() {
  datafloat_ = 0;
  clear_has_datafloat();
}
inline float Person::datafloat() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datafloat)
  return datafloat_;
}
inline void Person::set_datafloat(float value) {
  set_has_datafloat();
  datafloat_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datafloat)
}

// optional uint32 datau32 = 10;
inline bool Person::has_datau32() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Person::set_has_datau32() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Person::clear_has_datau32() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Person::clear_datau32() {
  datau32_ = 0u;
  clear_has_datau32();
}
inline ::google::protobuf::uint32 Person::datau32() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datau32)
  return datau32_;
}
inline void Person::set_datau32(::google::protobuf::uint32 value) {
  set_has_datau32();
  datau32_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datau32)
}

// optional uint64 datau64 = 11;
inline bool Person::has_datau64() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Person::set_has_datau64() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Person::clear_has_datau64() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Person::clear_datau64() {
  datau64_ = GOOGLE_ULONGLONG(0);
  clear_has_datau64();
}
inline ::google::protobuf::uint64 Person::datau64() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datau64)
  return datau64_;
}
inline void Person::set_datau64(::google::protobuf::uint64 value) {
  set_has_datau64();
  datau64_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datau64)
}

// optional bool databool = 12;
inline bool Person::has_databool() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Person::set_has_databool() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Person::clear_has_databool() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Person::clear_databool() {
  databool_ = false;
  clear_has_databool();
}
inline bool Person::databool() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.databool)
  return databool_;
}
inline void Person::set_databool(bool value) {
  set_has_databool();
  databool_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.databool)
}

// optional bytes databyte = 13;
inline bool Person::has_databyte() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Person::set_has_databyte() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Person::clear_has_databyte() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Person::clear_databyte() {
  if (databyte_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_->clear();
  }
  clear_has_databyte();
}
inline const ::std::string& Person::databyte() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.databyte)
  return *databyte_;
}
inline void Person::set_databyte(const ::std::string& value) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(value);
  // @@protoc_insertion_point(field_set:addressbook.Person.databyte)
}
inline void Person::set_databyte(const char* value) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(value);
  // @@protoc_insertion_point(field_set_char:addressbook.Person.databyte)
}
inline void Person::set_databyte(const void* value, size_t size) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:addressbook.Person.databyte)
}
inline ::std::string* Person::mutable_databyte() {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:addressbook.Person.databyte)
  return databyte_;
}
inline ::std::string* Person::release_databyte() {
  clear_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = databyte_;
    databyte_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Person::set_allocated_databyte(::std::string* databyte) {
  if (databyte_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete databyte_;
  }
  if (databyte) {
    set_has_databyte();
    databyte_ = databyte;
  } else {
    clear_has_databyte();
    databyte_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:addressbook.Person.databyte)
}

// optional fixed32 datafix32 = 14;
inline bool Person::has_datafix32() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Person::set_has_datafix32() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Person::clear_has_datafix32() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Person::clear_datafix32() {
  datafix32_ = 0u;
  clear_has_datafix32();
}
inline ::google::protobuf::uint32 Person::datafix32() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datafix32)
  return datafix32_;
}
inline void Person::set_datafix32(::google::protobuf::uint32 value) {
  set_has_datafix32();
  datafix32_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datafix32)
}

// optional fixed64 datafix64 = 15;
inline bool Person::has_datafix64() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Person::set_has_datafix64() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Person::clear_has_datafix64() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Person::clear_datafix64() {
  datafix64_ = GOOGLE_ULONGLONG(0);
  clear_has_datafix64();
}
inline ::google::protobuf::uint64 Person::datafix64() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datafix64)
  return datafix64_;
}
inline void Person::set_datafix64(::google::protobuf::uint64 value) {
  set_has_datafix64();
  datafix64_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datafix64)
}

// optional sfixed32 datasfix32 = 16;
inline bool Person::has_datasfix32() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Person::set_has_datasfix32() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Person::clear_has_datasfix32() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Person::clear_datasfix32() {
  datasfix32_ = 0;
  clear_has_datasfix32();
}
inline ::google::protobuf::int32 Person::datasfix32() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datasfix32)
  return datasfix32_;
}
inline void Person::set_datasfix32(::google::protobuf::int32 value) {
  set_has_datasfix32();
  datasfix32_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datasfix32)
}

// optional sfixed64 datasfix64 = 17;
inline bool Person::has_datasfix64() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Person::set_has_datasfix64() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Person::clear_has_datasfix64() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Person::clear_datasfix64() {
  datasfix64_ = GOOGLE_LONGLONG(0);
  clear_has_datasfix64();
}
inline ::google::protobuf::int64 Person::datasfix64() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datasfix64)
  return datasfix64_;
}
inline void Person::set_datasfix64(::google::protobuf::int64 value) {
  set_has_datasfix64();
  datasfix64_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datasfix64)
}

// optional float datafloat_scientific = 18;
inline bool Person::has_datafloat_scientific() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Person::set_has_datafloat_scientific() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Person::clear_has_datafloat_scientific() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Person::clear_datafloat_scientific() {
  datafloat_scientific_ = 0;
  clear_has_datafloat_scientific();
}
inline float Person::datafloat_scientific() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datafloat_scientific)
  return datafloat_scientific_;
}
inline void Person::set_datafloat_scientific(float value) {
  set_has_datafloat_scientific();
  datafloat_scientific_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datafloat_scientific)
}

// optional double datadouble_scientific = 19;
inline bool Person::has_datadouble_scientific() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Person::set_has_datadouble_scientific() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Person::clear_has_datadouble_scientific() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Person::clear_datadouble_scientific() {
  datadouble_scientific_ = 0;
  clear_has_datadouble_scientific();
}
inline double Person::datadouble_scientific() const {
  // @@protoc_insertion_point(field_get:addressbook.Person.datadouble_scientific)
  return datadouble_scientific_;
}
inline void Person::set_datadouble_scientific(double value) {
  set_has_datadouble_scientific();
  datadouble_scientific_ = value;
  // @@protoc_insertion_point(field_set:addressbook.Person.datadouble_scientific)
}

// -------------------------------------------------------------------

// AddressBook

// repeated .addressbook.Person person = 1;
inline int AddressBook::person_size() const {
  return person_.size();
}
inline void AddressBook::clear_person() {
  person_.Clear();
}
inline const ::addressbook::Person& AddressBook::person(int index) const {
  // @@protoc_insertion_point(field_get:addressbook.AddressBook.person)
  return person_.Get(index);
}
inline ::addressbook::Person* AddressBook::mutable_person(int index) {
  // @@protoc_insertion_point(field_mutable:addressbook.AddressBook.person)
  return person_.Mutable(index);
}
inline ::addressbook::Person* AddressBook::add_person() {
  // @@protoc_insertion_point(field_add:addressbook.AddressBook.person)
  return person_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::addressbook::Person >&
AddressBook::person() const {
  // @@protoc_insertion_point(field_list:addressbook.AddressBook.person)
  return person_;
}
inline ::google::protobuf::RepeatedPtrField< ::addressbook::Person >*
AddressBook::mutable_person() {
  // @@protoc_insertion_point(field_mutable_list:addressbook.AddressBook.person)
  return &person_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace addressbook

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::addressbook::Person_PhoneType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::addressbook::Person_PhoneType>() {
  return ::addressbook::Person_PhoneType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_addressbook_2eproto__INCLUDED
