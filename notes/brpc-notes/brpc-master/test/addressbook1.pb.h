// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: addressbook1.proto

#ifndef PROTOBUF_addressbook1_2eproto__INCLUDED
#define PROTOBUF_addressbook1_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_addressbook1_2eproto();
void protobuf_AssignDesc_addressbook1_2eproto();
void protobuf_ShutdownFile_addressbook1_2eproto();

class Ext;
class Content;
class JsonContextBody;
class PersonInfo;
class AddressBook;

enum Ext_PhoneType {
  Ext_PhoneType_MOBILE = 0,
  Ext_PhoneType_HOME = 1,
  Ext_PhoneType_WORK = 2
};
bool Ext_PhoneType_IsValid(int value);
const Ext_PhoneType Ext_PhoneType_PhoneType_MIN = Ext_PhoneType_MOBILE;
const Ext_PhoneType Ext_PhoneType_PhoneType_MAX = Ext_PhoneType_WORK;
const int Ext_PhoneType_PhoneType_ARRAYSIZE = Ext_PhoneType_PhoneType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Ext_PhoneType_descriptor();
inline const ::std::string& Ext_PhoneType_Name(Ext_PhoneType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Ext_PhoneType_descriptor(), value);
}
inline bool Ext_PhoneType_Parse(
    const ::std::string& name, Ext_PhoneType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Ext_PhoneType>(
    Ext_PhoneType_descriptor(), name, value);
}
// ===================================================================

class Ext : public ::google::protobuf::Message {
 public:
  Ext();
  virtual ~Ext();

  Ext(const Ext& from);

  inline Ext& operator=(const Ext& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ext& default_instance();

  void Swap(Ext* other);

  // implements Message ----------------------------------------------

  Ext* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ext& from);
  void MergeFrom(const Ext& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Ext_PhoneType PhoneType;
  static const PhoneType MOBILE = Ext_PhoneType_MOBILE;
  static const PhoneType HOME = Ext_PhoneType_HOME;
  static const PhoneType WORK = Ext_PhoneType_WORK;
  static inline bool PhoneType_IsValid(int value) {
    return Ext_PhoneType_IsValid(value);
  }
  static const PhoneType PhoneType_MIN =
    Ext_PhoneType_PhoneType_MIN;
  static const PhoneType PhoneType_MAX =
    Ext_PhoneType_PhoneType_MAX;
  static const int PhoneType_ARRAYSIZE =
    Ext_PhoneType_PhoneType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhoneType_descriptor() {
    return Ext_PhoneType_descriptor();
  }
  static inline const ::std::string& PhoneType_Name(PhoneType value) {
    return Ext_PhoneType_Name(value);
  }
  static inline bool PhoneType_Parse(const ::std::string& name,
      PhoneType* value) {
    return Ext_PhoneType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional fixed32 age = 2;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 2;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // required bytes databyte = 3;
  inline bool has_databyte() const;
  inline void clear_databyte();
  static const int kDatabyteFieldNumber = 3;
  inline const ::std::string& databyte() const;
  inline void set_databyte(const ::std::string& value);
  inline void set_databyte(const char* value);
  inline void set_databyte(const void* value, size_t size);
  inline ::std::string* mutable_databyte();
  inline ::std::string* release_databyte();
  inline void set_allocated_databyte(::std::string* databyte);

  // optional .Ext.PhoneType enumtype = 4 [default = HOME];
  inline bool has_enumtype() const;
  inline void clear_enumtype();
  static const int kEnumtypeFieldNumber = 4;
  inline ::Ext_PhoneType enumtype() const;
  inline void set_enumtype(::Ext_PhoneType value);

  // @@protoc_insertion_point(class_scope:Ext)
 private:
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_databyte();
  inline void clear_has_databyte();
  inline void set_has_enumtype();
  inline void clear_has_enumtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* databyte_;
  ::google::protobuf::uint32 age_;
  int enumtype_;
  friend void  protobuf_AddDesc_addressbook1_2eproto();
  friend void protobuf_AssignDesc_addressbook1_2eproto();
  friend void protobuf_ShutdownFile_addressbook1_2eproto();

  void InitAsDefaultInstance();
  static Ext* default_instance_;
};
// -------------------------------------------------------------------

class Content : public ::google::protobuf::Message {
 public:
  Content();
  virtual ~Content();

  Content(const Content& from);

  inline Content& operator=(const Content& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Content& default_instance();

  void Swap(Content* other);

  // implements Message ----------------------------------------------

  Content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Content& from);
  void MergeFrom(const Content& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline const ::std::string& uid() const;
  inline void set_uid(const ::std::string& value);
  inline void set_uid(const char* value);
  inline void set_uid(const char* value, size_t size);
  inline ::std::string* mutable_uid();
  inline ::std::string* release_uid();
  inline void set_allocated_uid(::std::string* uid);

  // required float distance = 16;
  inline bool has_distance() const;
  inline void clear_distance();
  static const int kDistanceFieldNumber = 16;
  inline float distance() const;
  inline void set_distance(float value);

  // optional .Ext ext = 17;
  inline bool has_ext() const;
  inline void clear_ext();
  static const int kExtFieldNumber = 17;
  inline const ::Ext& ext() const;
  inline ::Ext* mutable_ext();
  inline ::Ext* release_ext();
  inline void set_allocated_ext(::Ext* ext);

  // @@protoc_insertion_point(class_scope:Content)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_distance();
  inline void clear_has_distance();
  inline void set_has_ext();
  inline void clear_has_ext();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* uid_;
  ::Ext* ext_;
  float distance_;
  friend void  protobuf_AddDesc_addressbook1_2eproto();
  friend void protobuf_AssignDesc_addressbook1_2eproto();
  friend void protobuf_ShutdownFile_addressbook1_2eproto();

  void InitAsDefaultInstance();
  static Content* default_instance_;
};
// -------------------------------------------------------------------

class JsonContextBody : public ::google::protobuf::Message {
 public:
  JsonContextBody();
  virtual ~JsonContextBody();

  JsonContextBody(const JsonContextBody& from);

  inline JsonContextBody& operator=(const JsonContextBody& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JsonContextBody& default_instance();

  void Swap(JsonContextBody* other);

  // implements Message ----------------------------------------------

  JsonContextBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JsonContextBody& from);
  void MergeFrom(const JsonContextBody& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int64 type() const;
  inline void set_type(::google::protobuf::int64 value);

  // repeated int32 data = 5;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 5;
  inline ::google::protobuf::int32 data(int index) const;
  inline void set_data(int index, ::google::protobuf::int32 value);
  inline void add_data(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      data() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_data();

  // repeated string info = 6;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 6;
  inline const ::std::string& info(int index) const;
  inline ::std::string* mutable_info(int index);
  inline void set_info(int index, const ::std::string& value);
  inline void set_info(int index, const char* value);
  inline void set_info(int index, const char* value, size_t size);
  inline ::std::string* add_info();
  inline void add_info(const ::std::string& value);
  inline void add_info(const char* value);
  inline void add_info(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& info() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_info();

  // required bool judge = 2;
  inline bool has_judge() const;
  inline void clear_judge();
  static const int kJudgeFieldNumber = 2;
  inline bool judge() const;
  inline void set_judge(bool value);

  // required double spur = 3;
  inline bool has_spur() const;
  inline void clear_spur();
  static const int kSpurFieldNumber = 3;
  inline double spur() const;
  inline void set_spur(double value);

  // repeated .Content content = 4;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::Content& content(int index) const;
  inline ::Content* mutable_content(int index);
  inline ::Content* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::Content >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::Content >*
      mutable_content();

  // optional float text = 7;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 7;
  inline float text() const;
  inline void set_text(float value);

  // @@protoc_insertion_point(class_scope:JsonContextBody)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_judge();
  inline void clear_has_judge();
  inline void set_has_spur();
  inline void clear_has_spur();
  inline void set_has_text();
  inline void clear_has_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > data_;
  ::google::protobuf::RepeatedPtrField< ::std::string> info_;
  double spur_;
  bool judge_;
  float text_;
  ::google::protobuf::RepeatedPtrField< ::Content > content_;
  friend void  protobuf_AddDesc_addressbook1_2eproto();
  friend void protobuf_AssignDesc_addressbook1_2eproto();
  friend void protobuf_ShutdownFile_addressbook1_2eproto();

  void InitAsDefaultInstance();
  static JsonContextBody* default_instance_;
};
// -------------------------------------------------------------------

class PersonInfo : public ::google::protobuf::Message {
 public:
  PersonInfo();
  virtual ~PersonInfo();

  PersonInfo(const PersonInfo& from);

  inline PersonInfo& operator=(const PersonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonInfo& default_instance();

  void Swap(PersonInfo* other);

  // implements Message ----------------------------------------------

  PersonInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PersonInfo& from);
  void MergeFrom(const PersonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional .JsonContextBody json_body = 18;
  inline bool has_json_body() const;
  inline void clear_json_body();
  static const int kJsonBodyFieldNumber = 18;
  inline const ::JsonContextBody& json_body() const;
  inline ::JsonContextBody* mutable_json_body();
  inline ::JsonContextBody* release_json_body();
  inline void set_allocated_json_body(::JsonContextBody* json_body);

  // @@protoc_insertion_point(class_scope:PersonInfo)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_json_body();
  inline void clear_has_json_body();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::JsonContextBody* json_body_;
  ::google::protobuf::int32 id_;
  friend void  protobuf_AddDesc_addressbook1_2eproto();
  friend void protobuf_AssignDesc_addressbook1_2eproto();
  friend void protobuf_ShutdownFile_addressbook1_2eproto();

  void InitAsDefaultInstance();
  static PersonInfo* default_instance_;
};
// -------------------------------------------------------------------

class AddressBook : public ::google::protobuf::Message {
 public:
  AddressBook();
  virtual ~AddressBook();

  AddressBook(const AddressBook& from);

  inline AddressBook& operator=(const AddressBook& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddressBook& default_instance();

  void Swap(AddressBook* other);

  // implements Message ----------------------------------------------

  AddressBook* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddressBook& from);
  void MergeFrom(const AddressBook& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PersonInfo person = 1;
  inline int person_size() const;
  inline void clear_person();
  static const int kPersonFieldNumber = 1;
  inline const ::PersonInfo& person(int index) const;
  inline ::PersonInfo* mutable_person(int index);
  inline ::PersonInfo* add_person();
  inline const ::google::protobuf::RepeatedPtrField< ::PersonInfo >&
      person() const;
  inline ::google::protobuf::RepeatedPtrField< ::PersonInfo >*
      mutable_person();

  // @@protoc_insertion_point(class_scope:AddressBook)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PersonInfo > person_;
  friend void  protobuf_AddDesc_addressbook1_2eproto();
  friend void protobuf_AssignDesc_addressbook1_2eproto();
  friend void protobuf_ShutdownFile_addressbook1_2eproto();

  void InitAsDefaultInstance();
  static AddressBook* default_instance_;
};
// ===================================================================


// ===================================================================

// Ext

// optional fixed32 age = 2;
inline bool Ext::has_age() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ext::set_has_age() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ext::clear_has_age() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ext::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 Ext::age() const {
  // @@protoc_insertion_point(field_get:Ext.age)
  return age_;
}
inline void Ext::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:Ext.age)
}

// required bytes databyte = 3;
inline bool Ext::has_databyte() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ext::set_has_databyte() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ext::clear_has_databyte() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ext::clear_databyte() {
  if (databyte_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_->clear();
  }
  clear_has_databyte();
}
inline const ::std::string& Ext::databyte() const {
  // @@protoc_insertion_point(field_get:Ext.databyte)
  return *databyte_;
}
inline void Ext::set_databyte(const ::std::string& value) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(value);
  // @@protoc_insertion_point(field_set:Ext.databyte)
}
inline void Ext::set_databyte(const char* value) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(value);
  // @@protoc_insertion_point(field_set_char:Ext.databyte)
}
inline void Ext::set_databyte(const void* value, size_t size) {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  databyte_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Ext.databyte)
}
inline ::std::string* Ext::mutable_databyte() {
  set_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    databyte_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Ext.databyte)
  return databyte_;
}
inline ::std::string* Ext::release_databyte() {
  clear_has_databyte();
  if (databyte_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = databyte_;
    databyte_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Ext::set_allocated_databyte(::std::string* databyte) {
  if (databyte_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete databyte_;
  }
  if (databyte) {
    set_has_databyte();
    databyte_ = databyte;
  } else {
    clear_has_databyte();
    databyte_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Ext.databyte)
}

// optional .Ext.PhoneType enumtype = 4 [default = HOME];
inline bool Ext::has_enumtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Ext::set_has_enumtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Ext::clear_has_enumtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Ext::clear_enumtype() {
  enumtype_ = 1;
  clear_has_enumtype();
}
inline ::Ext_PhoneType Ext::enumtype() const {
  // @@protoc_insertion_point(field_get:Ext.enumtype)
  return static_cast< ::Ext_PhoneType >(enumtype_);
}
inline void Ext::set_enumtype(::Ext_PhoneType value) {
  assert(::Ext_PhoneType_IsValid(value));
  set_has_enumtype();
  enumtype_ = value;
  // @@protoc_insertion_point(field_set:Ext.enumtype)
}

// -------------------------------------------------------------------

// Content

// optional string uid = 1;
inline bool Content::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Content::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Content::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Content::clear_uid() {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_->clear();
  }
  clear_has_uid();
}
inline const ::std::string& Content::uid() const {
  // @@protoc_insertion_point(field_get:Content.uid)
  return *uid_;
}
inline void Content::set_uid(const ::std::string& value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set:Content.uid)
}
inline void Content::set_uid(const char* value) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(value);
  // @@protoc_insertion_point(field_set_char:Content.uid)
}
inline void Content::set_uid(const char* value, size_t size) {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  uid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Content.uid)
}
inline ::std::string* Content::mutable_uid() {
  set_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    uid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Content.uid)
  return uid_;
}
inline ::std::string* Content::release_uid() {
  clear_has_uid();
  if (uid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = uid_;
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Content::set_allocated_uid(::std::string* uid) {
  if (uid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete uid_;
  }
  if (uid) {
    set_has_uid();
    uid_ = uid;
  } else {
    clear_has_uid();
    uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Content.uid)
}

// required float distance = 16;
inline bool Content::has_distance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Content::set_has_distance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Content::clear_has_distance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Content::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float Content::distance() const {
  // @@protoc_insertion_point(field_get:Content.distance)
  return distance_;
}
inline void Content::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:Content.distance)
}

// optional .Ext ext = 17;
inline bool Content::has_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Content::set_has_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Content::clear_has_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Content::clear_ext() {
  if (ext_ != NULL) ext_->::Ext::Clear();
  clear_has_ext();
}
inline const ::Ext& Content::ext() const {
  // @@protoc_insertion_point(field_get:Content.ext)
  return ext_ != NULL ? *ext_ : *default_instance_->ext_;
}
inline ::Ext* Content::mutable_ext() {
  set_has_ext();
  if (ext_ == NULL) ext_ = new ::Ext;
  // @@protoc_insertion_point(field_mutable:Content.ext)
  return ext_;
}
inline ::Ext* Content::release_ext() {
  clear_has_ext();
  ::Ext* temp = ext_;
  ext_ = NULL;
  return temp;
}
inline void Content::set_allocated_ext(::Ext* ext) {
  delete ext_;
  ext_ = ext;
  if (ext) {
    set_has_ext();
  } else {
    clear_has_ext();
  }
  // @@protoc_insertion_point(field_set_allocated:Content.ext)
}

// -------------------------------------------------------------------

// JsonContextBody

// optional int64 type = 1;
inline bool JsonContextBody::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JsonContextBody::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JsonContextBody::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JsonContextBody::clear_type() {
  type_ = GOOGLE_LONGLONG(0);
  clear_has_type();
}
inline ::google::protobuf::int64 JsonContextBody::type() const {
  // @@protoc_insertion_point(field_get:JsonContextBody.type)
  return type_;
}
inline void JsonContextBody::set_type(::google::protobuf::int64 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:JsonContextBody.type)
}

// repeated int32 data = 5;
inline int JsonContextBody::data_size() const {
  return data_.size();
}
inline void JsonContextBody::clear_data() {
  data_.Clear();
}
inline ::google::protobuf::int32 JsonContextBody::data(int index) const {
  // @@protoc_insertion_point(field_get:JsonContextBody.data)
  return data_.Get(index);
}
inline void JsonContextBody::set_data(int index, ::google::protobuf::int32 value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:JsonContextBody.data)
}
inline void JsonContextBody::add_data(::google::protobuf::int32 value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:JsonContextBody.data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
JsonContextBody::data() const {
  // @@protoc_insertion_point(field_list:JsonContextBody.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
JsonContextBody::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:JsonContextBody.data)
  return &data_;
}

// repeated string info = 6;
inline int JsonContextBody::info_size() const {
  return info_.size();
}
inline void JsonContextBody::clear_info() {
  info_.Clear();
}
inline const ::std::string& JsonContextBody::info(int index) const {
  // @@protoc_insertion_point(field_get:JsonContextBody.info)
  return info_.Get(index);
}
inline ::std::string* JsonContextBody::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:JsonContextBody.info)
  return info_.Mutable(index);
}
inline void JsonContextBody::set_info(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:JsonContextBody.info)
  info_.Mutable(index)->assign(value);
}
inline void JsonContextBody::set_info(int index, const char* value) {
  info_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:JsonContextBody.info)
}
inline void JsonContextBody::set_info(int index, const char* value, size_t size) {
  info_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:JsonContextBody.info)
}
inline ::std::string* JsonContextBody::add_info() {
  return info_.Add();
}
inline void JsonContextBody::add_info(const ::std::string& value) {
  info_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:JsonContextBody.info)
}
inline void JsonContextBody::add_info(const char* value) {
  info_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:JsonContextBody.info)
}
inline void JsonContextBody::add_info(const char* value, size_t size) {
  info_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:JsonContextBody.info)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JsonContextBody::info() const {
  // @@protoc_insertion_point(field_list:JsonContextBody.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JsonContextBody::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:JsonContextBody.info)
  return &info_;
}

// required bool judge = 2;
inline bool JsonContextBody::has_judge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JsonContextBody::set_has_judge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JsonContextBody::clear_has_judge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JsonContextBody::clear_judge() {
  judge_ = false;
  clear_has_judge();
}
inline bool JsonContextBody::judge() const {
  // @@protoc_insertion_point(field_get:JsonContextBody.judge)
  return judge_;
}
inline void JsonContextBody::set_judge(bool value) {
  set_has_judge();
  judge_ = value;
  // @@protoc_insertion_point(field_set:JsonContextBody.judge)
}

// required double spur = 3;
inline bool JsonContextBody::has_spur() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JsonContextBody::set_has_spur() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JsonContextBody::clear_has_spur() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JsonContextBody::clear_spur() {
  spur_ = 0;
  clear_has_spur();
}
inline double JsonContextBody::spur() const {
  // @@protoc_insertion_point(field_get:JsonContextBody.spur)
  return spur_;
}
inline void JsonContextBody::set_spur(double value) {
  set_has_spur();
  spur_ = value;
  // @@protoc_insertion_point(field_set:JsonContextBody.spur)
}

// repeated .Content content = 4;
inline int JsonContextBody::content_size() const {
  return content_.size();
}
inline void JsonContextBody::clear_content() {
  content_.Clear();
}
inline const ::Content& JsonContextBody::content(int index) const {
  // @@protoc_insertion_point(field_get:JsonContextBody.content)
  return content_.Get(index);
}
inline ::Content* JsonContextBody::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:JsonContextBody.content)
  return content_.Mutable(index);
}
inline ::Content* JsonContextBody::add_content() {
  // @@protoc_insertion_point(field_add:JsonContextBody.content)
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Content >&
JsonContextBody::content() const {
  // @@protoc_insertion_point(field_list:JsonContextBody.content)
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::Content >*
JsonContextBody::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:JsonContextBody.content)
  return &content_;
}

// optional float text = 7;
inline bool JsonContextBody::has_text() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JsonContextBody::set_has_text() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JsonContextBody::clear_has_text() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JsonContextBody::clear_text() {
  text_ = 0;
  clear_has_text();
}
inline float JsonContextBody::text() const {
  // @@protoc_insertion_point(field_get:JsonContextBody.text)
  return text_;
}
inline void JsonContextBody::set_text(float value) {
  set_has_text();
  text_ = value;
  // @@protoc_insertion_point(field_set:JsonContextBody.text)
}

// -------------------------------------------------------------------

// PersonInfo

// optional string name = 1;
inline bool PersonInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PersonInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PersonInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PersonInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PersonInfo::name() const {
  // @@protoc_insertion_point(field_get:PersonInfo.name)
  return *name_;
}
inline void PersonInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:PersonInfo.name)
}
inline void PersonInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:PersonInfo.name)
}
inline void PersonInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PersonInfo.name)
}
inline ::std::string* PersonInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PersonInfo.name)
  return name_;
}
inline ::std::string* PersonInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PersonInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PersonInfo.name)
}

// optional int32 id = 2;
inline bool PersonInfo::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PersonInfo::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PersonInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PersonInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PersonInfo::id() const {
  // @@protoc_insertion_point(field_get:PersonInfo.id)
  return id_;
}
inline void PersonInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PersonInfo.id)
}

// optional .JsonContextBody json_body = 18;
inline bool PersonInfo::has_json_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PersonInfo::set_has_json_body() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PersonInfo::clear_has_json_body() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PersonInfo::clear_json_body() {
  if (json_body_ != NULL) json_body_->::JsonContextBody::Clear();
  clear_has_json_body();
}
inline const ::JsonContextBody& PersonInfo::json_body() const {
  // @@protoc_insertion_point(field_get:PersonInfo.json_body)
  return json_body_ != NULL ? *json_body_ : *default_instance_->json_body_;
}
inline ::JsonContextBody* PersonInfo::mutable_json_body() {
  set_has_json_body();
  if (json_body_ == NULL) json_body_ = new ::JsonContextBody;
  // @@protoc_insertion_point(field_mutable:PersonInfo.json_body)
  return json_body_;
}
inline ::JsonContextBody* PersonInfo::release_json_body() {
  clear_has_json_body();
  ::JsonContextBody* temp = json_body_;
  json_body_ = NULL;
  return temp;
}
inline void PersonInfo::set_allocated_json_body(::JsonContextBody* json_body) {
  delete json_body_;
  json_body_ = json_body;
  if (json_body) {
    set_has_json_body();
  } else {
    clear_has_json_body();
  }
  // @@protoc_insertion_point(field_set_allocated:PersonInfo.json_body)
}

// -------------------------------------------------------------------

// AddressBook

// repeated .PersonInfo person = 1;
inline int AddressBook::person_size() const {
  return person_.size();
}
inline void AddressBook::clear_person() {
  person_.Clear();
}
inline const ::PersonInfo& AddressBook::person(int index) const {
  // @@protoc_insertion_point(field_get:AddressBook.person)
  return person_.Get(index);
}
inline ::PersonInfo* AddressBook::mutable_person(int index) {
  // @@protoc_insertion_point(field_mutable:AddressBook.person)
  return person_.Mutable(index);
}
inline ::PersonInfo* AddressBook::add_person() {
  // @@protoc_insertion_point(field_add:AddressBook.person)
  return person_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PersonInfo >&
AddressBook::person() const {
  // @@protoc_insertion_point(field_list:AddressBook.person)
  return person_;
}
inline ::google::protobuf::RepeatedPtrField< ::PersonInfo >*
AddressBook::mutable_person() {
  // @@protoc_insertion_point(field_mutable_list:AddressBook.person)
  return &person_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Ext_PhoneType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Ext_PhoneType>() {
  return ::Ext_PhoneType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_addressbook1_2eproto__INCLUDED
